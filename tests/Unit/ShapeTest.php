<?php

namespace Tests\Unit;

use App\Shape;
use http\Exception\InvalidArgumentException;
use PHPUnit\Framework\TestCase;

class ShapeTest extends TestCase {

    public $shape;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->shape = new Shape(2,3);
    }


    /** @test */
    public function accepts_only_numeric_values_for_the_height_and_width()
    {
        $this->expectException("InvalidArgumentException");
        new Shape(2, 'test');
    }


    /** @test */
    public function can_set_the_name()
    {
        $this->shape->setName('nome');
        $this->assertEquals('nome', $this->shape->getName());
    }

    /** @test */
    public function can_get_the_shape_type()
    {
        $this->assertEquals(Shape::shapeType(), 1);
        $this->assertEquals(Shape::SHAPE_TYPE, 1);
    }

    /** @test */
    public function can_generate_a_new_object_with_the_same_properties()
    {
        $this->shape->setName('nome');
        $new_shape = $this->shape->getObject();
        $this->shape->setName('test');

        $this->assertEquals('test', $this->shape->getName());
        $this->assertNotEquals('test', $new_shape->getName());
    }

    /** @test */
    public function the_area_must_be_calculated()
    {
        $this->assertEquals(6, $this->shape->area());
        $this->assertEquals(10, (new Shape(5,2))->area());
    }





}
